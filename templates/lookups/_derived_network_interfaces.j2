{% set derived_network_interfaces_tpl = [] %}
{% if dubzland_network_interfaces | d() %}
{%   for iface in dubzland_network_interfaces %}
{%     set interface = {"name": iface.name, "weight": dubzland_network_interface_weights[iface.type | d('eth')], "aliases": []} %}
{%     set primary = {"name": iface.name, "inet": iface.inet} %}
{%     set _ = primary.update({"auto": iface.auto | d('yes')}) %}
{%     set _ = primary.update({"aliases": [], "options": []}) %}
{%     if (iface.address | d()) %}
{%       set _ = primary.options.append("address " + (iface.address | ipaddr('address'))) %}
{%       set _ = primary.options.append("netmask " + (iface.address | ipaddr('netmask'))) %}
{%     endif %}
{%     if (iface.gateway | d()) %}
{%       set _ = primary.options.append("gateway " + iface.gateway) %}
{%     endif %}
{%     if (iface.dns_nameservers | d()) %}
{%       set _ = primary.options.append("dns-nameservers " + (iface.dns_nameservers | join(' '))) %}
{%     endif %}
{%     if (iface.dns_search | d()) %}
{%       set _ = primary.options.append("dns-search " + (iface.dns_search | join(' '))) %}
{%     endif %}
{%     if iface.type | d() and iface.type == 'bridge' %}
{%       for attr in iface.keys() | sort %}
{%         if attr.startswith('bridge_') and iface[attr] != None %}
{%           if iface[attr] is iterable and iface[attr] is not string %}
{%             set _ = primary.options.append(attr + " " + (iface[attr] | join(' '))) %}
{%           else %}
{%             set _ = primary.options.append(attr + " " + (iface[attr] | string)) %}
{%           endif %}
{%         endif %}
{%       endfor %}
{%     endif %}
{%     if iface.type | d() and iface.type == 'bond' %}
{%       if iface.slaves | d() %}
{%         set _ = primary.options.append("bond-slaves " + (iface.slaves | join(' '))) %}
{%       endif %}
{%       for attr in iface.keys() | sort %}
{%         if attr.startswith('bond_') and iface[attr] != None %}
{%           if iface[attr] is iterable and iface[attr] is not string %}
{%             set _ = primary.options.append((attr | replace('_', '-')) + " " + (iface[attr] | join(' '))) %}
{%           else %}
{%             set _ = primary.options.append((attr | replace('_', '-')) + " " + (iface[attr] | string)) %}
{%           endif %}
{%         endif %}
{%       endfor %}
{%     endif %}
{%     if iface.ucarp | d() %}
{%       if (iface.ucarp.vid | d()) and (iface.ucarp.vip | d()) and (iface.ucarp.password | d()) and (iface.ucarp.advskew | d()) and (iface.ucarp.advbase | d()) %}
{%         set ucarp_iface = {"name": iface.name + ":ucarp", "auto": "no",
  "inet": "static", "weight": dubzland_network_interface_weights.ucarp, "options": []} %}
{%         set _ = ucarp_iface.options.append("address " + (iface.ucarp.vip | ipaddr('address'))) %}
{%         set _ = ucarp_iface.options.append("netmask " + (iface.ucarp.vip | ipaddr('netmask'))) %}
{%         if (iface.ucarp.gateway | d()) %}
{%         set _ = ucarp_iface.options.append("gateway " + (iface.ucarp.gateway | ipaddr('address'))) %}
{%         endif %}
{%         set _ = interface.aliases.append(ucarp_iface) %}
{%         set _ = primary.options.append("ucarp-vip " + (iface.ucarp.vip | ipaddr('address'))) %}
{%         set _ = primary.options.append("ucarp-vid " + (iface.ucarp.vid | string)) %}
{%         set _ = primary.options.append("ucarp-password " + iface.ucarp.password) %}
{%         set _ = primary.options.append("ucarp-advskew " + (iface.ucarp.advskew | string)) %}
{%         set _ = primary.options.append("ucarp-advbase " + (iface.ucarp.advbase | string)) %}
{%         set _ = primary.options.append("ucarp-master " + ("yes" if iface.ucarp.master else "no")) %}
{%       endif %}
{%     endif %}
{%     if iface.extra_options is defined and iface.extra_options | length > 0 %}
{%       for option in iface.extra_options %}
{%         set _ = primary.options.append(option) %}
{%       endfor %}
{%     endif %}
{%     set _ = interface.update({"primary": primary}) %}
{%     set _ = derived_network_interfaces_tpl.append(interface) %}
{%   endfor %}
{% endif %}
{{ derived_network_interfaces_tpl | to_yaml }}
